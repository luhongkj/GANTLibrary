apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {// 备注："release"类型的构建类型
            minifyEnabled true
            manifestPlaceholders = [AMAP_KEY: "${production_amap_key}"]  //  捷安特
            buildConfigField "String", "BASE_API_URL", "\"https://app.luhongkj.com:8443/appApi/\""//API请求接口
            buildConfigField "String", "BASE_UPLOAD_URL", "\"https://app.luhongkj.com:9443/files/image/upload/\""//上传图片
            buildConfigField "String", "BASE_WEB_URL", "\"https://app.luhongkj.com:9443/doc/\""//PDF文件
            buildConfigField "String", "H5_PAY", "\"https://app.luhongkj.com:9443/\""//支付
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//  捷安特
        }
        debug {// 备注："debug"类型的构建类型
           manifestPlaceholders = [AMAP_KEY: "${alpha_amap_key}"]//  捷安特
            buildConfigField "String", "BASE_API_URL", "\"https://apptest.luhongkj.com:8443/appApi/\""//API请求接口
            buildConfigField "String", "BASE_UPLOAD_URL", "\"https://apptest.luhongkj.com:9443/files/image/upload/\""//上传图片
            buildConfigField "String", "BASE_WEB_URL", "\"https://apptest.luhongkj.com:9443/doc/\""//PDF文件
            buildConfigField "String", "H5_PAY", "\"https://apptest.luhongkj.com:9443/\""//支付
        }
        staging {
            minifyEnabled true
            buildConfigField "String", "BASE_API_URL", "\"https://apptest.luhongkj.com:8443/appApi/\""//API请求接口
            buildConfigField "String", "BASE_UPLOAD_URL", "\"https://apptest.luhongkj.com:9443/files/image/upload/\""//上传图片
            buildConfigField "String", "BASE_WEB_URL", "\"https://apptest.luhongkj.com:9443/doc/\""//PDF文件
            buildConfigField "String", "H5_PAY", "\"https://apptest.luhongkj.com:9443/\""//支付
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//  捷安特
           manifestPlaceholders = [AMAP_KEY: "${staging_amap_key}"] //  捷安特
        }
    }
    lintOptions {
        abortOnError false
    }
    repositories {
        mavenCentral()
        google()
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    //     网络请求依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    implementation 'com.qianwen:okhttp-utils:3.8.0'
    //   api files('libs/Msc.jar')
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //图片框架
    implementation 'com.github.githubZYQ:easypermission:v1.0.0'
    //权限
    implementation 'com.github.zyyoona7:pickerview:1.0.9'
    //图片压缩
    implementation 'top.zibin:Luban:1.1.8'
    //加密
    implementation 'org.greenrobot:eventbus:3.1.1'
    //观察者
    implementation files('libs/pinyin4j-2.5.0.jar')
    //中文转换拼音
    implementation 'com.wang.avi:library:2.1.3'
    implementation('com.journeyapps:zxing-android-embedded:3.6.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.0'
    // 这个要3.3.0以下才支持Android 19以下系统
    //  高德地图
    //  implementation files('libs/AMap3DMap_6.9.4_AMapNavi_6.9.1_AMapLocation_4.7.0_20190831.jar')
    // implementation files('libs/AMap_Search_V6.9.2_20190709.jar')
    //PEF文件
    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    //自定义弹窗
    /*//3D地图so及jar
        implementation 'com.amap.api:3dmap:latest.integration'*/
    //定位功能
    implementation 'com.amap.api:location:latest.integration'
    //搜索功能
    implementation 'com.amap.api:search:latest.integration'
    //导航-地图
    implementation 'com.amap.api:navi-3dmap:latest.integration'
    implementation 'com.androidkun:XTabLayout:1.1.3'
    /**
     *  api 指令
     *  完全等同于compile指令，没区别，你将所有的compile改成api，完全没有错。
     *  implement指令
     *  这个指令的特点就是，对于使用了该命令编译的依赖，对该项目有依赖的项目将无法访问到使用该命令编译的依赖中的任何程序，也就是将该依赖隐藏在内部，而不对外部公开。
     */
    implementation 'com.just.agentweb:agentweb:4.1.3'
    // (必选)//webview
    //  implementation 'androidx.multidex:multidex:2.0.1'
}